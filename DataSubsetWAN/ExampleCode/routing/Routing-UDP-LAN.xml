<?xml version="1.0"?>
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/6.0.1/rti_routing_service.xsd">

    <qos_library name="RoutingLibrary">
        <datareader_qos name="ShapeDataReader">
            <reliability>
                <kind>RELIABLE_RELIABILITY_QOS</kind>
            </reliability>
            <durability>
                <kind>VOLATILE_DURABILITY_QOS</kind>
            </durability>
        </datareader_qos>
        
        <datawriter_qos name="ShapeDataWriter">
            <reliability>
                <kind>RELIABLE_RELIABILITY_QOS</kind>
            </reliability>
            <durability>
                <kind>VOLATILE_DURABILITY_QOS</kind>
            </durability>
        </datawriter_qos>
    </qos_library>

    <!-- ****************************************************************** -->
    <!-- Configuration file for RTI Routing Service bridging data in a LAN  -->
    <!-- ****************************************************************** -->

    <routing_service name="SOCI">

        <annotation>
            <documentation>
                Routes ShapeType topics from one domain to second domain
    and the other way around over UDP.

    Configurations in this file, with this Routing Service configuration marked
    as *RS1*:

    LAN apps ==[domain 6]== *RS1* ==[domain 0]== RS2 ==[domain 5]== LAN apps

    UDP LAN side:  Sending to/receiving from app in domain 6
    UDP "WAN" side:  Sending to/receiving from the other Routing Service 
    in domain 0
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            </documentation>
        </annotation>

        <!--  This Routing Service can receive administration commands on  
              domain 3.  This means that the Routing Service Shell or Admin  
              Console tools can send commands to update the configuration of
              this Routing Service. -->
        <administration>
            <domain_id>3</domain_id>
        </administration>

        <domain_route name="DataDomain">
            <!-- This routes from a local area network in domain 6 to another
                 UDP network in domain 0.  The domain-0 network is between
                 two Routing Services. -->
            <participant name="LocalDomain">
                <domain_id>6</domain_id>
            </participant>

            <participant name="BridgeDomain">
                <domain_id>0</domain_id>
            </participant>

            <session name="SessionForward">
                <topic_route name="ShapeForward">
                    <route_types>true</route_types> 
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>

                    <!-- The DomainParticipant in domain 6 that uses UDP -->
                    <input participant="LocalDomain">
                        <topic_name>Square</topic_name>
                        <registered_type_name>ShapeType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <!-- Only pass the Square data through if y is in the bottom half of the viewer -->
                        <content_filter>
                            <expression>y &gt; %0 AND y &lt; %1 </expression>
                            <parameter>140</parameter>
                            <parameter>265</parameter>
                        </content_filter>
                        <datareader_qos base_name="RoutingLibrary::ShapeDataReader"></datareader_qos>
                    </input>

                    <!-- The DomainParticipant that uses UDP in domain 0 -->
                    <output participant="BridgeDomain">
                        <topic_name>Square</topic_name>
                        <registered_type_name>ShapeType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <datawriter_qos base_name="RoutingLibrary::ShapeDataWriter">    
                        </datawriter_qos>
                    </output>
                </topic_route>
            </session>
            <session name="SessionBackward">
                <topic_route name="ShapeBackward">
                    <route_types>true</route_types>
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>

                    <!-- The DomainParticipant that bridges using domain 0 on UDP -->
                    <input participant="BridgeDomain">
                        <topic_name>Circle</topic_name>
                        <registered_type_name>ShapeType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <datareader_qos base_name="RoutingLibrary::ShapeDataReader">
                        </datareader_qos>
                    </input>
                    
                    <!-- The DomainParticipant in domain 6 that uses UDP -->
                    <output participant="LocalDomain">
                        <topic_name>Circle</topic_name>
                        <registered_type_name>ShapeType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <datawriter_qos base_name="RoutingLibrary::ShapeDataWriter">
                        </datawriter_qos>
                    </output>
                </topic_route>
            </session>
        </domain_route>
    </routing_service>

    <routing_service name="COSI">
        <annotation>
            <documentation>
                Routes Alarm and Temperature topics from one domain to second domain
    and the other way around over UDP.

    Configurations in this file, with this Routing Service configuration marked
    as *RS2*:

    LAN apps ==[domain 6]== RS1 ==[domain 0]== *RS2* ==[domain 5]== LAN apps

    UDP LAN side:  Sending to/receiving from app in domain 5
    UDP "WAN" side:  Sending to/receiving from the other Routing Service
    in domain 0
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            </documentation>
        </annotation>
        
        <!--  This Routing Service can receive administration commands on  
              domain 3.  This means that the Routing Service Shell or Admin  
              Console tools can send commands to update the configuration of
              this Routing Service. -->
        <administration>
            <domain_id>3</domain_id>
        </administration>

        <domain_route name="DataDomain">
            <!-- This routes from a local area UDP network on domain 5 to a -->
            <!-- bridge networks using domain 0 on UDP -->
            <participant name="LocalDomain">
                <domain_id>5</domain_id>
            </participant>

            <participant name="BridgeDomain">
                <domain_id>0</domain_id>
            </participant>

            <session name="SessionForward">
                <topic_route name="ShapeForward">
                    <route_types>true</route_types>
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>
                    <!-- The DomainParticipant for UDP local network -->
                    <input participant="LocalDomain">
                        <topic_name>Circle</topic_name>
                        <registered_type_name>ShapeType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <datareader_qos base_name="RoutingLibrary::ShapeDataReader">
                        </datareader_qos>
                    </input>
                    <output participant="BridgeDomain">
                        <topic_name>Circle</topic_name>
                        <registered_type_name>ShapeType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <datawriter_qos base_name="RoutingLibrary::ShapeDataWriter">
                        </datawriter_qos>
                    </output>
                </topic_route>
            </session>
            <session name="SessionBackward">
                <topic_route name="ShapeBackward">
                    <route_types>true</route_types>
                    <publish_with_original_info>true</publish_with_original_info>
                    <publish_with_original_timestamp>true</publish_with_original_timestamp>
                    <!-- The DomainParticipant that bridges using domain 0 on UDP -->
                    <input participant="BridgeDomain">
                        <topic_name>Square</topic_name>
                        <registered_type_name>ShapeType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <datareader_qos base_name="RoutingLibrary::ShapeDataReader">
                        </datareader_qos>
                    </input>

                    <output participant="LocalDomain">
                        <topic_name>Square</topic_name>
                        <registered_type_name>ShapeType</registered_type_name>
                        <creation_mode>IMMEDIATE</creation_mode>
                        <datawriter_qos base_name="RoutingLibrary::ShapeDataWriter">
                        </datawriter_qos>
                    </output>
                </topic_route>
            </session>
        </domain_route>
    </routing_service>
</dds>
